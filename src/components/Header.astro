---
import { SITE_TITLE } from "../consts";
import { Icon } from "astro-icon/components";
import { navData } from "../content/data/navData";
import "../styles/Header.css";
---

<header>
  <div class="header-content">
    <button id="menuToggle" class="menu-toggle" aria-label="Toggle menu">
      <span></span>
      <span></span>
      <span></span>
    </button>
    <div class="logo-container">
      <a href="/" class="logo">
        <img src={navData.logo} alt={SITE_TITLE} />
        <span class="site-title">{SITE_TITLE}</span>
      </a>
    </div>
    <nav class="nav-items">
      {
        navData.menu.map((item) => (
          <div class="nav-item">
            <a href={item.path || item.href}>
              {item.title}
              {item.children && (
                <Icon name="mdi:chevron-down" class="dropdown-indicator" />
              )}
            </a>
            {item.children && (
              <div class="dropdown">
                {item.children.map((child) => (
                  <a class="dropdown-item" href={child.href}>
                    {child.title}
                  </a>
                ))}
              </div>
            )}
          </div>
        ))
      }
    </nav>
    <div class="nav-actions">
      <button id="themeToggle" class="theme-toggle" aria-label="Toggle theme">
        <Icon name="mdi:weather-sunny" class="light-icon" />
        <Icon name="mdi:weather-night" class="dark-icon" />
      </button>
      <a href="#" class="download-button desktop-only">Download</a>
    </div>
  </div>
</header>
<div id="menuBackdrop" class="menu-backdrop"></div>

<script>
  const theme = (() => {
    if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
      return localStorage.getItem("theme");
    }
    if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
      return "dark";
    }
    return "light";
  })();

  function setTheme(newTheme: string) {
    const root = document.documentElement;
    root.classList.remove("light", "dark");
    root.classList.add(newTheme);
    localStorage.setItem("theme", newTheme);
  }

  setTheme(theme as string);

  const handleToggleClick = () => {
    const isDark = document.documentElement.classList.contains("dark");
    setTheme(isDark ? "light" : "dark");
  };

  document
    .getElementById("themeToggle")
    ?.addEventListener("click", handleToggleClick);

  const menuToggle = document.getElementById("menuToggle");
  const navItems = document.querySelector(".nav-items");
  const menuBackdrop = document.getElementById("menuBackdrop");

  menuToggle?.addEventListener("click", () => {
    navItems?.classList.toggle("open");
    menuToggle.classList.toggle("active");
    menuBackdrop?.classList.toggle("active");
    document.body.classList.toggle("menu-open");
  });

  menuBackdrop?.addEventListener("click", () => {
    navItems?.classList.remove("open");
    menuToggle?.classList.remove("active");
    menuBackdrop.classList.remove("active");
    document.body.classList.remove("menu-open");
    document.querySelectorAll(".nav-item").forEach((item) => {
      item.classList.remove("dropdown-open");
    });
  });

  const dropdownToggles = document.querySelectorAll(".nav-item > a");
  dropdownToggles.forEach((toggle) => {
    toggle.addEventListener("click", (e) => {
      if (window.innerWidth <= 768 && toggle.nextElementSibling) {
        e.preventDefault();
        const parentItem = toggle.parentElement;
        parentItem?.classList.toggle("dropdown-open");

        // Close other open dropdowns
        dropdownToggles.forEach((otherToggle) => {
          const otherParentItem = otherToggle.parentElement;
          if (
            otherParentItem !== parentItem &&
            otherParentItem?.classList.contains("dropdown-open")
          ) {
            otherParentItem.classList.remove("dropdown-open");
          }
        });
      }
    });
  });

  window.addEventListener("resize", () => {
    if (window.innerWidth > 768) {
      navItems?.classList.remove("open");
      menuToggle?.classList.remove("active");
      menuBackdrop?.classList.remove("active");
      document.body.classList.remove("menu-open");
      document.querySelectorAll(".nav-item").forEach((item) => {
        item.classList.remove("dropdown-open");
      });
    }
  });
</script>
